{"index.js":"/*\n\nWrite a function that splits an array (first argument) into groups the length of size (second argument) and returns them as a two-dimensional array.\n\n*/\nfunction chunkArrayInGroups(arr, size) {\n\n  let chunkedArray = [];\n  let modSize = (arr.length - (arr.length % size)) / size;\n\n  //console.log(modSize); \n\n  for (let k = 0; k < modSize; k += 1) {\n    let vesselArray = [];\n    //console.log(\"k is equal to \" + k);\n    for (let i = 0; i < size; i++){\n      //console.log(\"i+(k*size) is equal to \"+(i+(k*size)));\n      vesselArray.push(arr[i+(k*size)]);\n    }\n    //console.log(JSON.stringify(vesselArray));\n    chunkedArray.push(vesselArray);\n    //console.log(JSON.stringify(chunkedArray));\n  }\n  \n  //console.log(JSON.stringify(arr));\n\n  if (arr.length % size !== 0) {\n    let vesselArray = [];\n    for (let j = arr.length - 1; j >= arr.length - (arr.length % size); j--) {\n      console.log(arr[j]);\n      vesselArray.unshift(arr[j]);\n    }\n    chunkedArray.push(vesselArray);\n  }\n  console.log(JSON.stringify(chunkedArray));\n  // Break it up.\n  return chunkedArray;\n}\n\nchunkArrayInGroups([\"a\", \"b\", \"c\", \"d\"], 2);"}